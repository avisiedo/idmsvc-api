openapi: 3.0.2
info:
    title: hmsidm-backend
    version: 1.0.0
    description: Backend API for hmsidm service
    contact: {}
servers:
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Prod environment
      variables:
          schema:
              default: https
              description: Schema used to reach out the API
          domain:
              default: console.redhat.com
              description: The domain where our API is running
          port:
              default: "443"
              description: The port where our public API is listening
          prefix:
              default: /api/hmsidm/v1
              description: The prefix for our public API
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Prod Beta environment
      variables:
          schema:
              default: https
              description: Schema used to reach out the API
          domain:
              default: console.redhat.com
              description: The domain where our API is running
          port:
              default: "443"
              description: The port where our public API is listening
          prefix:
              default: /beta/api/hmsidm/v1
              description: The prefix for our public API
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Stage environment
      variables:
          schema:
              default: https
              description: Schema used to reach out the API
          domain:
              default: console.stage.redhat.com
              description: The domain where our API is running
          port:
              default: "443"
              description: The port where our public API is listening
          prefix:
              default: /api/hmsidm/v1
              description: The prefix for our public API
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Development environment
      variables:
          schema:
              default: http
              description: Schema used to reach out the API
          domain:
              default: localhost
              description: The domain where our API is running
          port:
              default: "8000"
              description: The port where our public API is listening
          prefix:
              default: /api/hmsidm/v1
              description: The prefix for our public API
paths:
    /domains:
        summary: Domain resource
        description: It store the necessary information about a domain that will let
            manage them
        get:
            tags:
                - resources
            parameters:
                - examples:
                      Default offset:
                          value: "0"
                      Page 2 for pages of 10 items:
                          value: "10"
                  name: offset
                  description: pagination offset
                  schema:
                      type: integer
                  in: query
                  required: false
                - examples:
                      Default value:
                          value: "10"
                      15 items per page:
                          value: "15"
                  name: limit
                  description: Number of items per page
                  schema:
                      type: integer
                  in: query
                  required: false
            responses:
                "200":
                    $ref: "#/components/responses/ListDomainsResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: listDomains
            summary: List domains in the organization
            description: |-
                For the current organization, list all the domains that
                are being managed from console.dot
        post:
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: "#/components/schemas/CreateDomain"
            responses:
                "201":
                    $ref: "#/components/responses/CreateDomainResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: createDomain
            summary: Create a domain.
            description: Create a domain in the current organization.
        parameters:
            - name: X-Rh-Identity
              description: Identity header for the request
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id for distributed tracing.
              schema:
                  type: string
              in: header
              required: false
    "/domains/{uuid}":
        summary: Operations on a specific domain
        description: Specific operations on an existing domain to read, update or delete
            it.
        get:
            tags:
                - resources
            responses:
                "200":
                    $ref: "#/components/responses/ReadDomainResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: readDomain
            summary: Read a domain.
            description: Request the information for a specific domain of our organization.
        delete:
            tags:
                - resources
            responses:
                "204":
                    description: Returned when the resource was deleted.
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: deleteDomain
            summary: Delete domain.
            description: Delete an existing domain from the current organization.
        parameters:
            - name: X-Rh-Identity
              description: Identity header for the request
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id for distributed tracing.
              schema:
                  type: string
              in: header
              required: false
            - examples:
                  a random uuid generated by 'uuid' command:
                      value: '"2e8ce5a6-b370-11ed-9330-482ae3863d30"'
              name: uuid
              description: The uuid that identify the domain.
              schema:
                  type: string
              in: path
              required: true
    "/hostconf/{fqdn}":
        summary: Autoenroll host vm endpoint.
        description: Endpoint used by host vm for auto-enrollment.
        post:
            requestBody:
                description: Required information to take the action.
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: "#/components/schemas/HostConf"
                        examples:
                            demo request:
                                value:
                                    fqdn: host1.domain.example
                                    subscription_manager_id: c3ac4b91-27cc-422c-a283-42aadfe730af
                required: true
            tags:
                - actions
            responses:
                "200":
                    $ref: "#/components/responses/HostConfResponse"
            security:
                - x-rh-identity: []
            operationId: hostConf
            summary: Get host vm information.
            description: Action to retrieve the host information for the host vm being
                enrolled.
        parameters:
            - name: X-Rh-Identity
              description: The identity header of the request.
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Unique request id for distributing tracing.
              schema:
                  type: string
              in: header
              required: false
            - name: fqdn
              description: The full qualified domain name of the host.
              schema:
                  type: string
              in: path
              required: true
    "/check_host/{subscription_manager_id}/{fqdn}":
        post:
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: "#/components/schemas/CheckHosts"
                required: true
            tags:
                - actions
            responses:
                "204":
                    description: The enroll of the host vm can be made.
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: checkHost
            summary: Check a host vm before auto-enroll into the domain.
            description: Called from the ipa server to check a host can be enrolled into the
                domain.
        parameters:
            - examples:
                  A random uuid generated from the terminal by 'uuid':
                      value: '"2e8ce5a6-b370-11ed-9330-482ae3863d30"'
              name: subscription_manager_id
              description: The subscription manager id.
              schema:
                  type: string
              in: path
              required: true
            - examples:
                  An example fqdn for a host.:
                      value: '"host1.domain.example"'
              name: fqdn
              description: The full qualified domain name for the host.
              schema:
                  type: string
              in: path
              required: true
            - name: X-Rh-Identity
              description: Identity header.
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id for distributed tracing.
              schema:
                  type: string
              in: header
              required: false
components:
    schemas:
        CreateDomain:
            title: Root Type for DomainResponse
            description: A domain resource
            required:
                - auto_enrollment_enabled
                - domain_name
                - domain_type
                - ipa
            type: object
            properties:
                domain_name:
                    description: Domain name
                    type: string
                    example: mydomain.example
                domain_type:
                    description: Type of this domain. Currently only ipa is supported.
                    enum:
                        - ipa
                    type: string
                    example: ipa
                auto_enrollment_enabled:
                    description: Enable or disable host vm auto-enrollment for this domain
                    type: boolean
                    example: "true"
                ipa:
                    $ref: "#/components/schemas/CreateDomainIpa"
                    description: Example for ipa parameters
                    properties:
                        realm_name:
                            type: string
                        ca_list:
                            type: string
                        server_list:
                            type: array
                            items:
                                type: string
                        client_options:
                            type: object
                    example: |
                        {
                            "realm_name": "IPA.EXAMPLE",
                            "ca_list": "base64",
                            "server_list": [
                              "server1.mydomain.example", 
                              "Server2.mydomain.example"
                            ],
                            "client_options": {}
                          }
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_type: ipa
                auto_enrollment_enabled: true
                ipa:
                    realm_name: IPA.EXAMPLE
                    ca_list: base64
                    server_list:
                        - server1.mydomain.example
                        - Server2.mydomain.example
                    client_options: {}
        CreateDomainIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_list
            type: object
            properties:
                realm_name:
                    description: The realm name for the domain
                    type: string
                    example: IPA.EXAMPLE
                ca_list:
                    description: A base64 representation of all the list of chain of certificates,
                        including the server ca.
                    type: string
                    example: ""
                server_list:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        type: string
                    example: '["server1.mydomain.example","server2.mydomain.example"]'
            example:
                realm_name: IPA.EXAMPLE
                ca_list: base64
                server_list:
                    - server1.mydomain.example
                    - server2.mydomain.example
                client_options: {}
        Error:
            title: Root Type for Error
            description: General error schema
            required:
                - detail
                - id
                - status
            type: object
            properties:
                id:
                    description: A unique identifier for this particular occurrence of the problem.
                    type: string
                    example: kjuadsfuashwe898w9jf
                status:
                    description: The HTTP status code applicable to this problem, expressed as a
                        string value. This SHOULD be provided.
                    maxLength: 3
                    minLength: 3
                    type: string
                    readOnly: true
                    example: "400"
                detail:
                    description: A human-readable explanation specific to this occurrence of the
                        problem. This field’s value can be localized.
                    type: string
                    example: Bad request
            example:
                id: ${X-RH-INSIGHTS-REQUEST-ID}
                status: "400"
                detail: "Bad request: additional details: more additional details"
        PaginationMeta:
            title: Root Type for PaginationMeta
            description: Metadata for the paginated responses.
            type: object
            properties:
                count:
                    format: int32
                    type: integer
            example:
                count: 1
        PaginationLinks:
            title: Root Type for PaginationLinks
            description: Represent the navigation links for the data paginated.
            type: object
            properties:
                first:
                    description: Reference to the first page of the request.
                    type: string
                last:
                    description: Reference to the last page of the request.
                    type: string
                next:
                    description: Reference to the next page of the request.
                    type: string
                previous:
                    description: Reference to the previous page of the request.
                    type: string
            example:
                first: /api/idm/v1/domains?limit=10&offset=0
                last: /api/idm/v1/domains?limit=10&offset=10
                next: /api/idm/v1/domains?limit=10&offset=10
                previous: /api/idm/v1/domains?limit=10&offset=0
        ListDomainsData:
            title: Root Type for ListDomainsData
            description: The data listed for the domains.
            type: object
            properties:
                domain_uuid:
                    type: string
                domain_name:
                    type: string
                domain_type:
                    type: string
                auto_enrollment_enabled:
                    type: boolean
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_type: ipa
                auto_enrollment_enabled: true
        ReadDomainIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_list
            type: object
            properties:
                realm_name:
                    description: The realm name for the domain
                    type: string
                    example: IPA.EXAMPLE
                ca_list:
                    description: A base64 representation of all the list of chain of certificates,
                        including the server ca.
                    type: string
                    example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUh1ekNDQnFPZ0F3SUJBZ0lRQjJYRWg0U05iZ1BKd3pCcGIvMVRCakFOQmdrcWhraUc5dzBCQVFzRkFEQlAKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVNrd0p3WURWUVFERXlCRQphV2RwUTJWeWRDQlVURk1nVWxOQklGTklRVEkxTmlBeU1ESXdJRU5CTVRBZUZ3MHlNakF6TWprd01EQXdNREJhCkZ3MHlNekF6TWpreU16VTVOVGxhTUdVeEN6QUpCZ05WQkFZVEFsVlRNUmN3RlFZRFZRUUlFdzVPYjNKMGFDQkQKWVhKdmJHbHVZVEVRTUE0R0ExVUVCeE1IVW1Gc1pXbG5hREVXTUJRR0ExVUVDaE1OVW1Wa0lFaGhkQ3dnU1c1agpMakVUTUJFR0ExVUVBeE1LY21Wa2FHRjBMbU52YlRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDCkFnb0NnZ0lCQU5FZzVYWWcxOXlPOXBCQnp0RWZNRjlwWFhZWThrczBOOWlZOHBJbTYwd1BKOEpBMUNDRC9FQksKYyt5d1VrRXN3TEpTOFpxZjl5QzRhRXVUK0lHOG1aSmNWZWdhQkZ0UzhBZVZ3RmZMK2g4dElpOXhIUnM5Mk5WYQpYTVlTU0JySk9JYUlLZXpxcllhV2JaSnVkaWFYcFAvcTFGZGxtZkIwSndDeW4vYmUvOTNpRGpiRW9BdFVFdmRxCkRpdzQzblNxSEhVTVlibkdXbFVOdFVLTVoxSkF5b2lYQ2tSQ2t4L2lGNC9EbXpjdDRTcUYwNzQrQURWZFJ6RTYKaEFvbmJ4aUZnYWU5cGx5SHRVUVd0RWhadmhRaERpUGVIdjZVUWxDbDJaVDVjdjArVHdHYUl6UnFDTVhXS0J5WQpKQXVML1dPdndjcmF1dE9ZRXlnZSs1TFJ3Yk1Rd2xnemZQeUN5RU9NZWZ3N1lIaEd1ZHUyUnJvaG1RdVltYlcyCk9kS3RZM1ZlRzNuTURobTVTVHFTcnlGbDdPbXNXUllZT3NiSVRCbjJNL2NxdTlPcFVlN0xpOFEzQ2wydk5YTVAKbGZ1SWovenBKcC9FVElUVG84Y1cvNnJCU2xXN2hCSjZhcm85cW8zM2F0Vy9mR2pmdnByV0JETjJodVVVZjI2KwpjSXdHUFowbTlkU01wMFRqRFdoamt6cmNlRzNaNlpNQjNIR3JWZVgwaFJXb0xFbk55bWprRE42RE5mOU9QcWRJCm1yRE1RcEptVFZ5bjhvZ0lSTkdmdklTTGE2RHhGT1AwYkxuOWRqR0FPR255ZGcvd2hYVVZRQkFmK0ZLNkxmSWcKSElDNndTcjVjWnVrb29tb2FZeU5pMi80N3B2TlNoRWpDaXRhMEdYa3kyY0lXc2tSejlzSkFnTUJBQUdqZ2dONwpNSUlEZHpBZkJnTlZIU01FR0RBV2dCUzNhNkxxcUtxRWpIbnF0Tm9QbUxMRmxYYTU5REFkQmdOVkhRNEVGZ1FVCmcyakNZMEFhODVLbnI4NGhvSG1UOW55Z2lLNHdKUVlEVlIwUkJCNHdISUlLY21Wa2FHRjBMbU52YllJT2QzZDMKTG5KbFpHaGhkQzVqYjIwd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQgpCZ2dyQmdFRkJRY0RBakNCandZRFZSMGZCSUdITUlHRU1FQ2dQcUE4aGpwb2RIUndPaTh2WTNKc015NWthV2RwClkyVnlkQzVqYjIwdlJHbG5hVU5sY25SVVRGTlNVMEZUU0VFeU5UWXlNREl3UTBFeExUUXVZM0pzTUVDZ1BxQTgKaGpwb2RIUndPaTh2WTNKc05DNWthV2RwWTJWeWRDNWpiMjB2UkdsbmFVTmxjblJVVEZOU1UwRlRTRUV5TlRZeQpNREl3UTBFeExUUXVZM0pzTUQ0R0ExVWRJQVEzTURVd013WUdaNEVNQVFJQ01Da3dKd1lJS3dZQkJRVUhBZ0VXCkcyaDBkSEE2THk5M2QzY3VaR2xuYVdObGNuUXVZMjl0TDBOUVV6Qi9CZ2dyQmdFRkJRY0JBUVJ6TUhFd0pBWUkKS3dZQkJRVUhNQUdHR0doMGRIQTZMeTl2WTNOd0xtUnBaMmxqWlhKMExtTnZiVEJKQmdnckJnRUZCUWN3QW9ZOQphSFIwY0RvdkwyTmhZMlZ5ZEhNdVpHbG5hV05sY25RdVkyOXRMMFJwWjJsRFpYSjBWRXhUVWxOQlUwaEJNalUyCk1qQXlNRU5CTVMweExtTnlkREFKQmdOVkhSTUVBakFBTUlJQmZ3WUtLd1lCQkFIV2VRSUVBZ1NDQVc4RWdnRnIKQVdrQWRnRG9QdERhUHZVR05UTG5WeWk4aVd2SkE5UEwwUkZyN090cDRYZDliUWE5YmdBQUFYL1VpcHZoQUFBRQpBd0JITUVVQ0lBOTFQZXB5K3MvbHhtb2JLNVZFVTdqdWx3Ynd5Yk9vZE4yTFFwVm81eHdMQWlFQWdqa2NNcnlMCk5xOXp2MmgxVTdmWm1Vc0tJVFlXR1liQTQvOWR3WWxiczBnQWRnQTF6eGtidjdGc1Y3OFByVXh0UXN1N3RpY2cKSmxIcVArRXE3NmdEd3p2V1RBQUFBWC9VaXB3UUFBQUVBd0JITUVVQ0lEdisra05VKzd1TVJaOWVvM3RuVHZocgpacG9SYnJuMlZUN2NPakJkY3pMNkFpRUF6elRqV3M2b0xsdUZaQ1dYN0NHOUxwM05Yb015U1lac2Jka0VBUUFOCmMzb0Fkd0N6YzNjSDRZUlErR09HMWdXcDNCRUpTbmt0c1djTUM0ZmM4QU1PZVRhbG1nQUFBWC9VaXB3ZUFBQUUKQXdCSU1FWUNJUURZaldhWm5SckRJRm1kZEUwLzBMNUwvd1g4S3g3RldHcUdxU2JmMGZGMXZ3SWhBSTgwbnVuaQp3UDF0cnBtQXpMaDRyVVJmdE1Ed1MrdE5wMzNwczVXblloLytNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUF4Ck1rRUh0RHJIbkcxdUdVTS9xVFc3TlRtLzB6RFRmbWpQaVpZVEREaWdOK29PWDVpL2VENDcwaUpYR21iRmg5MWsKZFZhRllGWTFsMGNGNmFKdjhvYm8wdVNSVHNHVGM3VklvQkkvZGZUV2E3eWNCV0ViNko5RkQ4NlkzTXgzVndsMQowQUpUeFBjejcwRGdGUkhEZXA0clVzSTVjTHNnV1pIS2Z2RzN6aytLWTk4aHdoR2sxc2I3czRlaWxDS0RUWXMvCnN5VkZ4dWc5c1JuZmV4YVgxcXN6cy9aTTBCMVVkOGhHRmJrUG45bFcvZGpsM2VkTFJ3c0pOeXZPRU5EN0hTUmsKVTNybGdEbkhUMzJVNVNyenNoVWRrQUZoZW9Ibi9uS3hXVENGenlHSzhTUlhjK29iWmFDNkNkcVZNeDlSZFhJVwpneitVcTlCYkJSc0trTE5wY0ZndgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFdmpDQ0E2YWdBd0lCQWdJUUJ0alpCTlZZUTBiMmlpK25WQ0oreERBTkJna3Foa2lHOXcwQkFRc0ZBREJoCk1Rc3dDUVlEVlFRR0V3SlZVekVWTUJNR0ExVUVDaE1NUkdsbmFVTmxjblFnU1c1ak1Sa3dGd1lEVlFRTEV4QjMKZDNjdVpHbG5hV05sY25RdVkyOXRNU0F3SGdZRFZRUURFeGRFYVdkcFEyVnlkQ0JIYkc5aVlXd2dVbTl2ZENCRApRVEFlRncweU1UQTBNVFF3TURBd01EQmFGdzB6TVRBME1UTXlNelU1TlRsYU1FOHhDekFKQmdOVkJBWVRBbFZUCk1SVXdFd1lEVlFRS0V3eEVhV2RwUTJWeWRDQkpibU14S1RBbkJnTlZCQU1USUVScFoybERaWEowSUZSTVV5QlMKVTBFZ1UwaEJNalUySURJd01qQWdRMEV4TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBd1V1elpVZHd2TjFQV052c25PM0RadVVmTVJOVXJVcG1SaDhzQ3V4a0IrVXUzTnk1Q2lEdDMrUEUwSjZhCnFYb2Rnb2psRVZiYkhwOVl3bEhuTERRTkx0S1M0VmJMOFhsZnM3dUh5aVVEZTVwU1FXWVFZRTlYRTBudzZEZG4KZzkvbjAwdG5UQ0pScHQ4T21SRHRWMUYwSnVKOXg4cGlMaE1iZnlPSUpWTnZ3VFJZQUl1RS8vaStwMWhKSW51VwpyYUtJbXhXOG9IemY2VkdvMWJEdE4rSTJ0SUpMWXJWSm11ekhaOWJqUHZYajFoSmVSUEcvY1VKOVdJUURnTEdCCkFmcjV5aks3dEk0bmh5ZkZLM1RVcU5hWDNzTmsrY3JPVTZKV3ZIZ1hqa2tES2E3N1NVK2tGYm5POGx3WlYyMXIKZWFjcm9pY2dFN1hRUFVEVElUQUhrK3FaOVFJREFRQUJvNElCZ2pDQ0FYNHdFZ1lEVlIwVEFRSC9CQWd3QmdFQgovd0lCQURBZEJnTlZIUTRFRmdRVXQydWk2cWlxaEl4NTZyVGFENWl5eFpWMnVmUXdId1lEVlIwakJCZ3dGb0FVCkE5NVFOVmJSVEx0bThLUGlHeHZEbDdJOTBWVXdEZ1lEVlIwUEFRSC9CQVFEQWdHR01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpCMkJnZ3JCZ0VGQlFjQkFRUnFNR2d3SkFZSUt3WUJCUVVITUFHRwpHR2gwZEhBNkx5OXZZM053TG1ScFoybGpaWEowTG1OdmJUQkFCZ2dyQmdFRkJRY3dBb1kwYUhSMGNEb3ZMMk5oClkyVnlkSE11WkdsbmFXTmxjblF1WTI5dEwwUnBaMmxEWlhKMFIyeHZZbUZzVW05dmRFTkJMbU55ZERCQ0JnTlYKSFI4RU96QTVNRGVnTmFBemhqRm9kSFJ3T2k4dlkzSnNNeTVrYVdkcFkyVnlkQzVqYjIwdlJHbG5hVU5sY25SSApiRzlpWVd4U2IyOTBRMEV1WTNKc01EMEdBMVVkSUFRMk1EUXdDd1lKWUlaSUFZYjliQUlCTUFjR0JXZUJEQUVCCk1BZ0dCbWVCREFFQ0FUQUlCZ1puZ1F3QkFnSXdDQVlHWjRFTUFRSURNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUIKQVFDQU1zNWVDOTF1V2cwS3IrSFdoTXZBanZxRmNPM2FYYk1NOXl0MVFQNkZDdnJ6TVhpM2NFc2FpVmk2Z0wzegpheDNwZnM4THVsaWNXZFNRMC8xcy9kQ1liYmR4Z2x2UGJRdGFDZEI3M3NSRDJDcWszcDVCSmwrN2o1bkwzYTdoCnFHK2ZoLzUwdHg4YklLdXhUOGIxWjExZG16enAvMm4zWVd6VzJmUDlOc2FyQTRoMjBrc3VkWWJqL05oVmZTYkMKRVhmZlBnSzJmUE9yZTNxR05tKzQ5OWlUY2MrRzMzTXcrbnVyN1NwWnlFS0VPeEVYR2xMenlRNFVmYUpiY21lNgpjZTFYUjJiRnVBSktaVFJlaTlBcVBDQ2NVWmxNNTFLZTkyc1JLdzJTZmgzb2l1czJGa09INmlwanYzVS82OTdFCkE3c0tQUGN3Nyt1dlRQeUxOaEJ6UHZPawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                server_list:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        type: string
                    example: '["server1.mydomain.example","server2.mydomain.example"]'
            example:
                realm_name: IPA.EXAMPLE
                ca_list: base64
                server_list:
                    - server1.mydomain.example
                    - server2.mydomain.example
                client_options: {}
        HostConf:
            title: Root Type for HostConf
            description: Represent the request payload for the /hostconf/:fqdn endpoint.
            type: object
            properties:
                fqdn:
                    description: The full qualified domain name of the host vm that is being
                        enrolled.
                    type: string
                    example: '"myhost.domain.example"'
                subscription_manager_id:
                    description: The id for the subscription manager.
                    type: string
                    example: '"c3ac4b91-27cc-422c-a283-42aadfe730af"'
            example:
                fqdn: host1.domain.example
                subscription_manager_id: c3ac4b91-27cc-422c-a283-42aadfe730af
        CheckHosts:
            title: Root Type for CheckHosts
            description: >-
                Define the input data for the /check_host action.


                This action is launched from the ipa server to check the host that is being

                auto-enrolled.
            required:
                - inventory_id
                - domain_type
                - domain_name
                - subscription_manager_id
            type: object
            properties:
                domain_name:
                    description: The domain name where to enroll the host vm.
                    type: string
                    example: '"domain.example"'
                domain_type:
                    description: Indicate the type of domain. Actually only ipa is supported.
                    type: string
                    example: '"ipa"'
                subscription_manager_id:
                    description: The subscription manager id for auto-enroll the host vm.
                    type: string
                    example: '"2326738a-adf8-11ed-af7d-482ae3863d30"'
                inventory_id:
                    description: The id of the host vm into the insight host inventory.
                    type: string
                    example: '"2ea6db7e-cf74-4560-a286-4d7c9eaf698f"'
            example:
                domain_name: domain.example
                domain_type: ipa
                subscription_manager_id: 2326738a-adf8-11ed-af7d-482ae3863d30
                inventory_id: 2ea6db7e-cf74-4560-a286-4d7c9eaf698f
        HostConfIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_list
            type: object
            properties:
                realm_name:
                    description: The realm name for the domain
                    type: string
                    example: IPA.EXAMPLE
                ca_list:
                    description: A base64 representation of all the list of chain of certificates,
                        including the server ca.
                    type: string
                    example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUh1ekNDQnFPZ0F3SUJBZ0lRQjJYRWg0U05iZ1BKd3pCcGIvMVRCakFOQmdrcWhraUc5dzBCQVFzRkFEQlAKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVNrd0p3WURWUVFERXlCRQphV2RwUTJWeWRDQlVURk1nVWxOQklGTklRVEkxTmlBeU1ESXdJRU5CTVRBZUZ3MHlNakF6TWprd01EQXdNREJhCkZ3MHlNekF6TWpreU16VTVOVGxhTUdVeEN6QUpCZ05WQkFZVEFsVlRNUmN3RlFZRFZRUUlFdzVPYjNKMGFDQkQKWVhKdmJHbHVZVEVRTUE0R0ExVUVCeE1IVW1Gc1pXbG5hREVXTUJRR0ExVUVDaE1OVW1Wa0lFaGhkQ3dnU1c1agpMakVUTUJFR0ExVUVBeE1LY21Wa2FHRjBMbU52YlRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDCkFnb0NnZ0lCQU5FZzVYWWcxOXlPOXBCQnp0RWZNRjlwWFhZWThrczBOOWlZOHBJbTYwd1BKOEpBMUNDRC9FQksKYyt5d1VrRXN3TEpTOFpxZjl5QzRhRXVUK0lHOG1aSmNWZWdhQkZ0UzhBZVZ3RmZMK2g4dElpOXhIUnM5Mk5WYQpYTVlTU0JySk9JYUlLZXpxcllhV2JaSnVkaWFYcFAvcTFGZGxtZkIwSndDeW4vYmUvOTNpRGpiRW9BdFVFdmRxCkRpdzQzblNxSEhVTVlibkdXbFVOdFVLTVoxSkF5b2lYQ2tSQ2t4L2lGNC9EbXpjdDRTcUYwNzQrQURWZFJ6RTYKaEFvbmJ4aUZnYWU5cGx5SHRVUVd0RWhadmhRaERpUGVIdjZVUWxDbDJaVDVjdjArVHdHYUl6UnFDTVhXS0J5WQpKQXVML1dPdndjcmF1dE9ZRXlnZSs1TFJ3Yk1Rd2xnemZQeUN5RU9NZWZ3N1lIaEd1ZHUyUnJvaG1RdVltYlcyCk9kS3RZM1ZlRzNuTURobTVTVHFTcnlGbDdPbXNXUllZT3NiSVRCbjJNL2NxdTlPcFVlN0xpOFEzQ2wydk5YTVAKbGZ1SWovenBKcC9FVElUVG84Y1cvNnJCU2xXN2hCSjZhcm85cW8zM2F0Vy9mR2pmdnByV0JETjJodVVVZjI2KwpjSXdHUFowbTlkU01wMFRqRFdoamt6cmNlRzNaNlpNQjNIR3JWZVgwaFJXb0xFbk55bWprRE42RE5mOU9QcWRJCm1yRE1RcEptVFZ5bjhvZ0lSTkdmdklTTGE2RHhGT1AwYkxuOWRqR0FPR255ZGcvd2hYVVZRQkFmK0ZLNkxmSWcKSElDNndTcjVjWnVrb29tb2FZeU5pMi80N3B2TlNoRWpDaXRhMEdYa3kyY0lXc2tSejlzSkFnTUJBQUdqZ2dONwpNSUlEZHpBZkJnTlZIU01FR0RBV2dCUzNhNkxxcUtxRWpIbnF0Tm9QbUxMRmxYYTU5REFkQmdOVkhRNEVGZ1FVCmcyakNZMEFhODVLbnI4NGhvSG1UOW55Z2lLNHdKUVlEVlIwUkJCNHdISUlLY21Wa2FHRjBMbU52YllJT2QzZDMKTG5KbFpHaGhkQzVqYjIwd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQgpCZ2dyQmdFRkJRY0RBakNCandZRFZSMGZCSUdITUlHRU1FQ2dQcUE4aGpwb2RIUndPaTh2WTNKc015NWthV2RwClkyVnlkQzVqYjIwdlJHbG5hVU5sY25SVVRGTlNVMEZUU0VFeU5UWXlNREl3UTBFeExUUXVZM0pzTUVDZ1BxQTgKaGpwb2RIUndPaTh2WTNKc05DNWthV2RwWTJWeWRDNWpiMjB2UkdsbmFVTmxjblJVVEZOU1UwRlRTRUV5TlRZeQpNREl3UTBFeExUUXVZM0pzTUQ0R0ExVWRJQVEzTURVd013WUdaNEVNQVFJQ01Da3dKd1lJS3dZQkJRVUhBZ0VXCkcyaDBkSEE2THk5M2QzY3VaR2xuYVdObGNuUXVZMjl0TDBOUVV6Qi9CZ2dyQmdFRkJRY0JBUVJ6TUhFd0pBWUkKS3dZQkJRVUhNQUdHR0doMGRIQTZMeTl2WTNOd0xtUnBaMmxqWlhKMExtTnZiVEJKQmdnckJnRUZCUWN3QW9ZOQphSFIwY0RvdkwyTmhZMlZ5ZEhNdVpHbG5hV05sY25RdVkyOXRMMFJwWjJsRFpYSjBWRXhUVWxOQlUwaEJNalUyCk1qQXlNRU5CTVMweExtTnlkREFKQmdOVkhSTUVBakFBTUlJQmZ3WUtLd1lCQkFIV2VRSUVBZ1NDQVc4RWdnRnIKQVdrQWRnRG9QdERhUHZVR05UTG5WeWk4aVd2SkE5UEwwUkZyN090cDRYZDliUWE5YmdBQUFYL1VpcHZoQUFBRQpBd0JITUVVQ0lBOTFQZXB5K3MvbHhtb2JLNVZFVTdqdWx3Ynd5Yk9vZE4yTFFwVm81eHdMQWlFQWdqa2NNcnlMCk5xOXp2MmgxVTdmWm1Vc0tJVFlXR1liQTQvOWR3WWxiczBnQWRnQTF6eGtidjdGc1Y3OFByVXh0UXN1N3RpY2cKSmxIcVArRXE3NmdEd3p2V1RBQUFBWC9VaXB3UUFBQUVBd0JITUVVQ0lEdisra05VKzd1TVJaOWVvM3RuVHZocgpacG9SYnJuMlZUN2NPakJkY3pMNkFpRUF6elRqV3M2b0xsdUZaQ1dYN0NHOUxwM05Yb015U1lac2Jka0VBUUFOCmMzb0Fkd0N6YzNjSDRZUlErR09HMWdXcDNCRUpTbmt0c1djTUM0ZmM4QU1PZVRhbG1nQUFBWC9VaXB3ZUFBQUUKQXdCSU1FWUNJUURZaldhWm5SckRJRm1kZEUwLzBMNUwvd1g4S3g3RldHcUdxU2JmMGZGMXZ3SWhBSTgwbnVuaQp3UDF0cnBtQXpMaDRyVVJmdE1Ed1MrdE5wMzNwczVXblloLytNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUF4Ck1rRUh0RHJIbkcxdUdVTS9xVFc3TlRtLzB6RFRmbWpQaVpZVEREaWdOK29PWDVpL2VENDcwaUpYR21iRmg5MWsKZFZhRllGWTFsMGNGNmFKdjhvYm8wdVNSVHNHVGM3VklvQkkvZGZUV2E3eWNCV0ViNko5RkQ4NlkzTXgzVndsMQowQUpUeFBjejcwRGdGUkhEZXA0clVzSTVjTHNnV1pIS2Z2RzN6aytLWTk4aHdoR2sxc2I3czRlaWxDS0RUWXMvCnN5VkZ4dWc5c1JuZmV4YVgxcXN6cy9aTTBCMVVkOGhHRmJrUG45bFcvZGpsM2VkTFJ3c0pOeXZPRU5EN0hTUmsKVTNybGdEbkhUMzJVNVNyenNoVWRrQUZoZW9Ibi9uS3hXVENGenlHSzhTUlhjK29iWmFDNkNkcVZNeDlSZFhJVwpneitVcTlCYkJSc0trTE5wY0ZndgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFdmpDQ0E2YWdBd0lCQWdJUUJ0alpCTlZZUTBiMmlpK25WQ0oreERBTkJna3Foa2lHOXcwQkFRc0ZBREJoCk1Rc3dDUVlEVlFRR0V3SlZVekVWTUJNR0ExVUVDaE1NUkdsbmFVTmxjblFnU1c1ak1Sa3dGd1lEVlFRTEV4QjMKZDNjdVpHbG5hV05sY25RdVkyOXRNU0F3SGdZRFZRUURFeGRFYVdkcFEyVnlkQ0JIYkc5aVlXd2dVbTl2ZENCRApRVEFlRncweU1UQTBNVFF3TURBd01EQmFGdzB6TVRBME1UTXlNelU1TlRsYU1FOHhDekFKQmdOVkJBWVRBbFZUCk1SVXdFd1lEVlFRS0V3eEVhV2RwUTJWeWRDQkpibU14S1RBbkJnTlZCQU1USUVScFoybERaWEowSUZSTVV5QlMKVTBFZ1UwaEJNalUySURJd01qQWdRMEV4TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBd1V1elpVZHd2TjFQV052c25PM0RadVVmTVJOVXJVcG1SaDhzQ3V4a0IrVXUzTnk1Q2lEdDMrUEUwSjZhCnFYb2Rnb2psRVZiYkhwOVl3bEhuTERRTkx0S1M0VmJMOFhsZnM3dUh5aVVEZTVwU1FXWVFZRTlYRTBudzZEZG4KZzkvbjAwdG5UQ0pScHQ4T21SRHRWMUYwSnVKOXg4cGlMaE1iZnlPSUpWTnZ3VFJZQUl1RS8vaStwMWhKSW51VwpyYUtJbXhXOG9IemY2VkdvMWJEdE4rSTJ0SUpMWXJWSm11ekhaOWJqUHZYajFoSmVSUEcvY1VKOVdJUURnTEdCCkFmcjV5aks3dEk0bmh5ZkZLM1RVcU5hWDNzTmsrY3JPVTZKV3ZIZ1hqa2tES2E3N1NVK2tGYm5POGx3WlYyMXIKZWFjcm9pY2dFN1hRUFVEVElUQUhrK3FaOVFJREFRQUJvNElCZ2pDQ0FYNHdFZ1lEVlIwVEFRSC9CQWd3QmdFQgovd0lCQURBZEJnTlZIUTRFRmdRVXQydWk2cWlxaEl4NTZyVGFENWl5eFpWMnVmUXdId1lEVlIwakJCZ3dGb0FVCkE5NVFOVmJSVEx0bThLUGlHeHZEbDdJOTBWVXdEZ1lEVlIwUEFRSC9CQVFEQWdHR01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpCMkJnZ3JCZ0VGQlFjQkFRUnFNR2d3SkFZSUt3WUJCUVVITUFHRwpHR2gwZEhBNkx5OXZZM053TG1ScFoybGpaWEowTG1OdmJUQkFCZ2dyQmdFRkJRY3dBb1kwYUhSMGNEb3ZMMk5oClkyVnlkSE11WkdsbmFXTmxjblF1WTI5dEwwUnBaMmxEWlhKMFIyeHZZbUZzVW05dmRFTkJMbU55ZERCQ0JnTlYKSFI4RU96QTVNRGVnTmFBemhqRm9kSFJ3T2k4dlkzSnNNeTVrYVdkcFkyVnlkQzVqYjIwdlJHbG5hVU5sY25SSApiRzlpWVd4U2IyOTBRMEV1WTNKc01EMEdBMVVkSUFRMk1EUXdDd1lKWUlaSUFZYjliQUlCTUFjR0JXZUJEQUVCCk1BZ0dCbWVCREFFQ0FUQUlCZ1puZ1F3QkFnSXdDQVlHWjRFTUFRSURNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUIKQVFDQU1zNWVDOTF1V2cwS3IrSFdoTXZBanZxRmNPM2FYYk1NOXl0MVFQNkZDdnJ6TVhpM2NFc2FpVmk2Z0wzegpheDNwZnM4THVsaWNXZFNRMC8xcy9kQ1liYmR4Z2x2UGJRdGFDZEI3M3NSRDJDcWszcDVCSmwrN2o1bkwzYTdoCnFHK2ZoLzUwdHg4YklLdXhUOGIxWjExZG16enAvMm4zWVd6VzJmUDlOc2FyQTRoMjBrc3VkWWJqL05oVmZTYkMKRVhmZlBnSzJmUE9yZTNxR05tKzQ5OWlUY2MrRzMzTXcrbnVyN1NwWnlFS0VPeEVYR2xMenlRNFVmYUpiY21lNgpjZTFYUjJiRnVBSktaVFJlaTlBcVBDQ2NVWmxNNTFLZTkyc1JLdzJTZmgzb2l1czJGa09INmlwanYzVS82OTdFCkE3c0tQUGN3Nyt1dlRQeUxOaEJ6UHZPawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                server_list:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        type: string
                    example: '["server1.mydomain.example","server2.mydomain.example"]'
            example:
                realm_name: IPA.EXAMPLE
                ca_list: base64
                server_list:
                    - server1.mydomain.example
                    - server2.mydomain.example
                client_options: {}
        CreateDomainResponseSchema:
            title: Root Type for DomainResponse
            description: A domain resource
            required:
                - auto_enrollment_enabled
                - domain_name
                - domain_type
                - ipa
                - domain_uuid
            type: object
            properties:
                domain_uuid:
                    description: Internal id for this domain
                    type: string
                    example: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name:
                    description: Domain name
                    type: string
                    example: mydomain.example
                domain_type:
                    description: Type of this domain. Currently only ipa is supported.
                    enum:
                        - ipa
                    type: string
                    example: ipa
                auto_enrollment_enabled:
                    description: Enable or disable host vm auto-enrollment for this domain
                    type: boolean
                    example: "true"
                ipa:
                    $ref: "#/components/schemas/CreateDomainIpa"
                    description: Example for ipa parameters
                    properties:
                        realm_name:
                            type: string
                        ca_list:
                            type: string
                        server_list:
                            type: array
                            items:
                                type: string
                        client_options:
                            type: object
                    example: |
                        {
                            "realm_name": "IPA.EXAMPLE",
                            "ca_list": "base64",
                            "server_list": [
                              "server1.mydomain.example", 
                              "Server2.mydomain.example"
                            ],
                            "client_options": {}
                          }
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_type: ipa
                auto_enrollment_enabled: true
                ipa:
                    realm_name: IPA.EXAMPLE
                    ca_list: base64
                    server_list:
                        - server1.mydomain.example
                        - Server2.mydomain.example
                    client_options: {}
        ErrorResponseSchema:
            title: Root Type for ErrorResponse
            description: General error response returned by the hmsidm API
            type: object
            properties:
                errors:
                    description: Error objects provide additional information about problems
                        encountered while performing an operation.
                    minItems: 1
                    type: array
                    items:
                        $ref: "#/components/schemas/Error"
                    readOnly: true
                    example: >
                        [
                          {
                            "id": "${X-RH-INSIGHTS-REQUEST-ID}",
                            "status": "400",
                            "detail": "Bad request: additional details: more additional details"
                          }
                        ]
            example:
                errors:
                    - id: ${X-RH-INSIGHTS-REQUEST-ID}
                      status: "400"
                      detail: "Bad request: additional details: more additional details"
        HostConfResponseSchema:
            title: Root Type for HostConfResponse
            description: >-
                The response for the action to retrieve the host vm information
                when

                it is being enrolled. This action is taken from the host vm.
            type: object
            properties:
                domain_name:
                    type: string
                domain_type:
                    type: string
                ipa:
                    type: object
                    properties:
                        realm_name:
                            type: string
                        ca_cert:
                            type: string
                        server_list:
                            type: array
                            items:
                                type: string
            example:
                domain_name: domain.example
                domain_type: ipa
                ipa:
                    realm_name: DOMAIN.EXAMPLE
                    ca_cert: |
                        -----BEGIN CERTIFICATE-----
                        MII...
                        -----END CERTIFICATE-----
                    server_list:
                        - ipaserver.domain.example
        ListDomainsResponseSchema:
            title: Root Type for ListDomains
            description: Represent a paginated result for a list of domains
            required:
                - meta
                - data
                - links
            type: object
            properties:
                meta:
                    $ref: "#/components/schemas/PaginationMeta"
                    description: Page metadata.
                    properties:
                        count:
                            format: int32
                            type: integer
                links:
                    $ref: "#/components/schemas/PaginationLinks"
                    description: Pagination links.
                    properties:
                        first:
                            type: string
                        last:
                            type: string
                        next:
                            type: string
                        previous:
                            type: string
                data:
                    description: The content for this page.
                    type: array
                    items:
                        $ref: "#/components/schemas/ListDomainsData"
            example:
                meta:
                    count: 1
                links:
                    first: /api/idm/v1/domains?limit=10&offset=0
                    last: /api/idm/v1/domains?limit=10&offset=10
                    next: /api/idm/v1/domains?limit=10&offset=10
                    previous: /api/idm/v1/domains?limit=10&offset=0
                data:
                    - domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                      domain_name: mydomain.example
                      domain_type: ipa
                      auto_enrollment_enabled: true
        ReadDomainResponseSchema:
            title: Root Type for ReadDomainResponse
            description: Represent the information read for a specific domain.
            type: object
            properties:
                domain_uuid:
                    description: Internal identifier for the domain, it is unique into system.
                    type: string
                    example: '"870d6ad2-b354-11ed-925c-482ae3863d30"'
                domain_name:
                    description: The name of the domain.
                    type: string
                    example: '"mydomain.example"'
                domain_type:
                    description: Actually only "ipa" is supported.
                    type: string
                    example: '"ipa"'
                auto_enrollment_enabled:
                    description: Inidicate if the auto-enrollment is enabled or disabled for this
                        domain.
                    type: boolean
                    example: "true"
                ipa:
                    $ref: "#/components/schemas/ReadDomainIpa"
                    description: It contains the specific information for domains of type IPA.
                    properties:
                        realm_name:
                            type: string
                        ca_list:
                            type: string
                        server_list:
                            type: array
                            items:
                                type: string
                        client_options:
                            type: object
                    example: |-
                        {
                            "realm_name": "MYDOMAIN.EXAMPLE",
                            "ca_list": "base64",
                            "server_list": [
                                "server1.mydomain.example",
                                "server2.mydomain.example"
                            ],
                            "client_options": {}
                        }
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_type: ipa
                auto_enrollment_enabled: true
                ipa:
                    realm_name: MYDOMAIN.EXAMPLE
                    ca_list: base64
                    server_list:
                        - server1.mydomain.example
                        - server2.mydomain.example
                    client_options: {}
    responses:
        CreateDomainResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/CreateDomainResponseSchema"
            description: Response when a domain has been created.
        ErrorResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ErrorResponseSchema"
            description: Error response for some operation.
        ReadDomainResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ReadDomainResponseSchema"
            description: This represent the response for a specific domain.
        ListDomainsResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ListDomainsResponseSchema"
            description: It represent the response for a list of domains query.
        HostConfResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/HostConfResponseSchema"
            description: Response for the HostConf action.
    securitySchemes:
        x-rh-identity:
            type: apiKey
            description: Require a valid X-Rh-Identity
            name: X-Rh-Identity
            in: header
security:
    - x-rh-identity: []
tags:
    - name: resources
      description: CRUD operation on defined resources
    - name: actions
      description: Endpoints no directly related with resources but model actions with
          the API

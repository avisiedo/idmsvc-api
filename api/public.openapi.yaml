openapi: 3.0.2
info:
    title: hmsidm-backend
    version: 1.0.0
    description: Backend API for hmsidm service
    contact: {}
servers:
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Prod environment
      variables:
          schema:
              default: https
              description: Schema used to reach out the API
          domain:
              default: console.redhat.com
              description: The domain where our API is running
          port:
              default: "443"
              description: The port where our public API is listening
          prefix:
              default: /api/hmsidm/v1
              description: The prefix for our public API
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Prod Beta environment
      variables:
          schema:
              default: https
              description: Schema used to reach out the API
          domain:
              default: console.redhat.com
              description: The domain where our API is running
          port:
              default: "443"
              description: The port where our public API is listening
          prefix:
              default: /beta/api/hmsidm/v1
              description: The prefix for our public API
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Stage environment
      variables:
          schema:
              default: https
              description: Schema used to reach out the API
          domain:
              default: console.stage.redhat.com
              description: The domain where our API is running
          port:
              default: "443"
              description: The port where our public API is listening
          prefix:
              default: /api/hmsidm/v1
              description: The prefix for our public API
    - url: "{schema}://{domain}:{port}{prefix}"
      description: Development environment
      variables:
          schema:
              default: http
              description: Schema used to reach out the API
          domain:
              default: localhost
              description: The domain where our API is running
          port:
              default: "8000"
              description: The port where our public API is listening
          prefix:
              default: /api/hmsidm/v1
              description: The prefix for our public API
paths:
    "/domains/{uuid}":
        summary: Operations on a specific domain
        description: Specific operations on an existing domain to read, update or delete
            it.
        get:
            tags:
                - resources
            responses:
                "200":
                    $ref: "#/components/responses/ReadDomainResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: readDomain
            summary: Read a domain.
            description: Request the information for a specific domain of our organization.
        delete:
            tags:
                - resources
            responses:
                "204":
                    description: Returned when the resource was deleted.
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: deleteDomain
            summary: Delete domain.
            description: Delete an existing domain from the current organization.
        parameters:
            - name: X-Rh-Identity
              description: Identity header for the request
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id for distributed tracing.
              schema:
                  type: string
              in: header
              required: false
            - examples:
                  a random uuid generated by 'uuid' command:
                      value: '"2e8ce5a6-b370-11ed-9330-482ae3863d30"'
              name: uuid
              description: The uuid that identify the domain.
              schema:
                  type: string
              in: path
              required: true
    "/check-host/{subscription_manager_id}/{fqdn}":
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CheckHosts"
                required: true
            tags:
                - actions
            responses:
                "204":
                    description: The enroll of the host vm can be made.
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: checkHost
            summary: Check a host vm before auto-enroll into the domain.
            description: Called from the ipa server to check a host can be enrolled into the
                domain.
        parameters:
            - examples:
                  A random uuid generated from the terminal by 'uuid':
                      value: '"2e8ce5a6-b370-11ed-9330-482ae3863d30"'
              name: subscription_manager_id
              description: The subscription manager id.
              schema:
                  type: string
              in: path
              required: true
            - examples:
                  An example fqdn for a host.:
                      value: '"host1.domain.example"'
              name: fqdn
              description: The full qualified domain name for the host.
              schema:
                  type: string
              in: path
              required: true
            - name: X-Rh-Identity
              description: Identity header.
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id for distributed tracing.
              schema:
                  type: string
              in: header
              required: false
    "/host-conf/{fqdn}":
        summary: Autoenroll host vm endpoint.
        description: Endpoint used by host vm for auto-enrollment.
        post:
            requestBody:
                description: Required information to take the action.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/HostConf"
                        examples:
                            demo request:
                                value:
                                    fqdn: host1.domain.example
                                    subscription_manager_id: c3ac4b91-27cc-422c-a283-42aadfe730af
                required: true
            tags:
                - actions
            responses:
                "200":
                    $ref: "#/components/responses/HostConfResponse"
            security:
                - x-rh-identity: []
            operationId: hostConf
            summary: Get host vm information.
            description: Action to retrieve the host information for the host vm being
                enrolled.
        parameters:
            - name: X-Rh-Identity
              description: The identity header of the request.
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Unique request id for distributing tracing.
              schema:
                  type: string
              in: header
              required: false
            - name: fqdn
              description: The full qualified domain name of the host.
              schema:
                  type: string
              in: path
              required: true
    /domains:
        summary: Domain resource
        description: It store the necessary information about a domain that will let
            manage them
        get:
            tags:
                - resources
            parameters:
                - examples:
                      Default offset:
                          value: 0
                      Page 2 for pages of 10 items:
                          value: 10
                  name: offset
                  description: pagination offset
                  schema:
                      type: integer
                  in: query
                  required: false
                - examples:
                      Default value:
                          value: 10
                      15 items per page:
                          value: 15
                  name: limit
                  description: Number of items per page
                  schema:
                      type: integer
                  in: query
                  required: false
            responses:
                "200":
                    $ref: "#/components/responses/ListDomainsResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: listDomains
            summary: List domains in the organization
            description: |-
                For the current organization, list all the domains that
                are being managed from console.dot
        post:
            requestBody:
                description: Domain object to be created.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateDomain"
                required: true
            tags:
                - resources
            responses:
                "201":
                    $ref: "#/components/responses/CreateDomainResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: createDomain
            summary: Create a domain.
            description: Create a domain in the current organization.
        parameters:
            - name: X-Rh-Identity
              description: Identity header for the request
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id for distributed tracing.
              schema:
                  type: string
              in: header
              required: false
    "/domains/{uuid}/ipa/register":
        summary: Register an IPA domain information.
        description: First registration to update the IPA domain information.
        put:
            requestBody:
                description: Information for an IPA domain so it is updated from the ipa-hcc
                    agent.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RegisterDomainIpa"
                        examples:
                            set ipa domain information:
                                value:
                                    servers:
                                        - fqdn: ipaserver.mydomain.example
                                          rhsm_id: 547ce70c-9eb5-4783-a619-086aa26f88e5
                                          ca_server: true
                                          hcc_enrollment_server: true
                                          hcc_update_server: true
                                          pkinit_server: true
                                    ca_certs:
                                        - nickname: MYDOMAIN.EXAMPLE IPA CA
                                          issuer: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                                          subject: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                                          serial_number: "1"
                                          not_valid_before: 2023-01-31T13:23:36Z
                                          not_valid_after: 2023-01-31T13:23:36Z
                                          pem: |
                                              -----BEGIN CERTIFICATE-----
                                              MII...
                                              -----END CERTIFICATE-----
                                    realm_domains:
                                        - mydomain.example
                required: true
            tags:
                - ipa
            responses:
                "200":
                    $ref: "#/components/responses/CreateDomainIpaResponse"
                "400":
                    $ref: "#/components/responses/ErrorResponse"
                "403":
                    $ref: "#/components/responses/ErrorResponse"
                "404":
                    $ref: "#/components/responses/ErrorResponse"
            security:
                - x-rh-identity: []
            operationId: registerIpaDomain
            summary: Register an IPA domain.
            description: >-
                Use the one time use token to register the initial information for

                an IPA domain.
        parameters:
            - name: X-Rh-Identity
              description: Identity header
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-Insights-Request-Id
              description: Request id
              schema:
                  type: string
              in: header
              required: true
            - name: X-Rh-IDM-Registration-Token
              description: One time use token to register ipa information.
              schema:
                  type: string
              in: header
              required: true
            - examples:
                  uuid:
                      value: 08363cd4-bea8-11ed-b83f-482ae3863d30
              name: uuid
              description: uuid for the IPA domain.
              schema:
                  type: string
              in: path
              required: true
components:
    schemas:
        Error:
            title: Root Type for Error
            description: General error schema
            required:
                - detail
                - id
                - status
            type: object
            properties:
                id:
                    description: A unique identifier for this particular occurrence of the problem.
                    type: string
                    example: kjuadsfuashwe898w9jf
                status:
                    description: The HTTP status code applicable to this problem, expressed as a
                        string value. This SHOULD be provided.
                    maxLength: 3
                    minLength: 3
                    type: string
                    readOnly: true
                    example: "400"
                detail:
                    description: A human-readable explanation specific to this occurrence of the
                        problem. This field’s value can be localized.
                    type: string
                    example: Bad request
            example:
                id: ${X-RH-INSIGHTS-REQUEST-ID}
                status: "400"
                detail: "Bad request: additional details: more additional details"
        PaginationMeta:
            title: Root Type for PaginationMeta
            description: Metadata for the paginated responses.
            type: object
            properties:
                count:
                    format: int32
                    description: Total number of registers without pagination.
                    type: integer
                    example: "1"
            additionalProperties: false
            example:
                count: 1
        PaginationLinks:
            title: Root Type for PaginationLinks
            description: Represent the navigation links for the data paginated.
            type: object
            properties:
                first:
                    description: Reference to the first page of the request.
                    type: string
                last:
                    description: Reference to the last page of the request.
                    type: string
                next:
                    description: Reference to the next page of the request.
                    type: string
                previous:
                    description: Reference to the previous page of the request.
                    type: string
            additionalProperties: false
            example:
                first: /api/idm/v1/domains?limit=10&offset=0
                last: /api/idm/v1/domains?limit=10&offset=10
                next: /api/idm/v1/domains?limit=10&offset=10
                previous: /api/idm/v1/domains?limit=10&offset=0
        ListDomainsData:
            title: Root Type for ListDomainsData
            description: The data listed for the domains.
            type: object
            properties:
                domain_uuid:
                    type: string
                domain_name:
                    type: string
                domain_type:
                    type: string
                auto_enrollment_enabled:
                    type: boolean
            additionalProperties: false
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_type: ipa
                auto_enrollment_enabled: true
        HostConf:
            title: Root Type for HostConf
            description: Represent the request payload for the /hostconf/:fqdn endpoint.
            type: object
            properties:
                fqdn:
                    description: The full qualified domain name of the host vm that is being
                        enrolled.
                    type: string
                    example: '"myhost.domain.example"'
                subscription_manager_id:
                    description: The id for the subscription manager.
                    type: string
                    example: '"c3ac4b91-27cc-422c-a283-42aadfe730af"'
            example:
                fqdn: host1.domain.example
                subscription_manager_id: c3ac4b91-27cc-422c-a283-42aadfe730af
        CheckHosts:
            title: Root Type for CheckHosts
            description: >-
                Define the input data for the /check_host action.


                This action is launched from the ipa server to check the host that is being

                auto-enrolled.
            required:
                - inventory_id
                - domain_type
                - domain_name
                - subscription_manager_id
            type: object
            properties:
                domain_name:
                    description: The domain name where to enroll the host vm.
                    type: string
                    example: '"domain.example"'
                domain_type:
                    description: Indicate the type of domain. Actually only ipa is supported.
                    type: string
                    example: '"ipa"'
                subscription_manager_id:
                    description: The subscription manager id for auto-enroll the host vm.
                    type: string
                    example: '"2326738a-adf8-11ed-af7d-482ae3863d30"'
                inventory_id:
                    description: The id of the host vm into the insight host inventory.
                    type: string
                    example: '"2ea6db7e-cf74-4560-a286-4d7c9eaf698f"'
            example:
                domain_name: domain.example
                domain_type: ipa
                subscription_manager_id: 2326738a-adf8-11ed-af7d-482ae3863d30
                inventory_id: 2ea6db7e-cf74-4560-a286-4d7c9eaf698f
        HostConfIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_certs
            type: object
            properties:
                realm_name:
                    description: The realm name for the domain
                    type: string
                    example: IPA.EXAMPLE
                server_list:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        type: string
                    example: '["server1.mydomain.example","server2.mydomain.example"]'
                ca_certs:
                    description: List of certificate data.
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateDomainIpaCert"
                    example:
                        - nickname: MYDOMAIN.EXAMPLE IPA CA
                          issuer: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                          subject: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                          serial_number: "1"
                          not_valid_before: 2023-01-31T13:23:36Z
                          not_valid_after: 2023-01-31T13:23:36Z
                          pem": |-
                              -----BEGIN CERTIFICATE-----
                              MIIE...
                              -----END CERTIFICATE-----
            example:
                realm_name: IPA.EXAMPLE
                ca_list: base64
                server_list:
                    - server1.mydomain.example
                    - server2.mydomain.example
                client_options: {}
        ErrorResponseSchema:
            title: Root Type for ErrorResponse
            description: General error response returned by the hmsidm API
            type: object
            properties:
                errors:
                    description: Error objects provide additional information about problems
                        encountered while performing an operation.
                    minItems: 1
                    type: array
                    items:
                        $ref: "#/components/schemas/Error"
                    readOnly: true
                    example: >
                        [
                          {
                            "id": "${X-RH-INSIGHTS-REQUEST-ID}",
                            "status": "400",
                            "detail": "Bad request: additional details: more additional details"
                          }
                        ]
            example:
                errors:
                    - id: ${X-RH-INSIGHTS-REQUEST-ID}
                      status: "400"
                      detail: "Bad request: additional details: more additional details"
        HostConfResponseSchema:
            title: Root Type for HostConfResponse
            description: >-
                The response for the action to retrieve the host vm information
                when

                it is being enrolled. This action is taken from the host vm.
            type: object
            properties:
                domain_name:
                    type: string
                domain_type:
                    type: string
                ipa:
                    type: object
                    properties:
                        realm_name:
                            type: string
                        ca_cert:
                            type: string
                        server_list:
                            type: array
                            items:
                                type: string
            example:
                domain_name: domain.example
                domain_type: ipa
                ipa:
                    realm_name: DOMAIN.EXAMPLE
                    ca_cert: |
                        -----BEGIN CERTIFICATE-----
                        MII...
                        -----END CERTIFICATE-----
                    server_list:
                        - ipaserver.domain.example
        CreateDomainIpaCert:
            title: Root Type for CreateDomainIpaCert
            description: Represent a certificate item in the cacerts list for the Ipa domain
                type.
            type: object
            properties:
                nickname:
                    type: string
                issuer:
                    type: string
                subject:
                    type: string
                serial_number:
                    type: string
                not_valid_before:
                    format: date-time
                    type: string
                not_valid_after:
                    format: date-time
                    type: string
                pem:
                    type: string
            additionalProperties: false
            example:
                nickname: MYDOMAIN.EXAMPLE IPA CA
                issuer: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                subject: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                serial_number: "1"
                not_valid_before: 2023-01-31T13:23:36Z
                not_valid_after: 2023-01-31T13:23:36Z
                pem: |
                    -----BEGIN CERTIFICATE-----
                    MIIE...
                    -----END CERTIFICATE-----
        DomainResponseIpaCert:
            title: Root Type for CreateDomainIpaCert
            description: Represent a certificate item in the cacerts list for the Ipa domain
                type.
            required:
                - issuer
                - nickname
                - not_valid_after
                - not_valid_before
                - pem
                - serial_number
                - subject
            type: object
            properties:
                nickname:
                    type: string
                issuer:
                    type: string
                subject:
                    type: string
                serial_number:
                    type: string
                not_valid_before:
                    format: date-time
                    type: string
                not_valid_after:
                    format: date-time
                    type: string
                pem:
                    type: string
            additionalProperties: false
            example:
                nickname: MYDOMAIN.EXAMPLE IPA CA
                issuer: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                subject: CN=Certificate Authority,O=MYDOMAIN.EXAMPLE
                serial_number: "1"
                not_valid_before: 2023-01-31T13:23:36Z
                not_valid_after: 2023-01-31T13:23:36Z
                pem: |
                    -----BEGIN CERTIFICATE-----
                    MIIE...
                    -----END CERTIFICATE-----
        DomainResponse:
            title: Root Type for DomainResponse
            description: A domain resource
            required:
                - auto_enrollment_enabled
                - domain_name
                - domain_type
                - ipa
                - domain_uuid
                - domain_description
            type: object
            properties:
                domain_uuid:
                    description: Internal id for this domain
                    type: string
                    example: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name:
                    description: Domain name
                    type: string
                    example: mydomain.example
                domain_type:
                    description: Type of this domain. Currently only ipa is supported.
                    enum:
                        - ipa
                    type: string
                    example: ipa
                auto_enrollment_enabled:
                    description: Enable or disable host vm auto-enrollment for this domain
                    type: boolean
                    example: "true"
                ipa:
                    $ref: "#/components/schemas/DomainResponseIpa"
                domain_description:
                    description: Human readable description abou the domain.
                    type: string
            additionalProperties: false
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_description: My awesome domain description.
                domain_type: ipa
                auto_enrollment_enabled: true
                ipa:
                    realm_name: IPA.EXAMPLE
                    ca_list: base64
                    server_list:
                        - server1.mydomain.example
                        - Server2.mydomain.example
                    client_options: {}
        ListDomainsResponseSchema:
            title: Root Type for ListDomains
            description: Represent a paginated result for a list of domains
            required:
                - meta
                - data
                - links
            type: object
            properties:
                meta:
                    $ref: "#/components/schemas/PaginationMeta"
                links:
                    $ref: "#/components/schemas/PaginationLinks"
                data:
                    description: The content for this page.
                    type: array
                    items:
                        $ref: "#/components/schemas/ListDomainsData"
            additionalProperties: false
            example:
                meta:
                    count: 1
                links:
                    first: /api/idm/v1/domains?limit=10&offset=0
                    last: /api/idm/v1/domains?limit=10&offset=10
                    next: /api/idm/v1/domains?limit=10&offset=10
                    previous: /api/idm/v1/domains?limit=10&offset=0
                data:
                    - domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                      domain_name: mydomain.example
                      domain_type: ipa
                      auto_enrollment_enabled: true
        CreateDomain:
            title: Root Type for DomainResponse
            description: A domain resource
            required:
                - auto_enrollment_enabled
                - domain_name
                - domain_type
                - ipa
                - domain_description
            type: object
            properties:
                domain_name:
                    description: Domain name
                    type: string
                    example: mydomain.example
                domain_type:
                    description: Type of this domain. Currently only ipa is supported.
                    enum:
                        - ipa
                    type: string
                    example: ipa
                auto_enrollment_enabled:
                    description: Enable or disable host vm auto-enrollment for this domain
                    type: boolean
                    example: "true"
                ipa:
                    $ref: "#/components/schemas/CreateDomainIpa"
                domain_description:
                    description: Humand readable description for this domain.
                    type: string
                    example: This is my awesome domain description.
            additionalProperties: false
            example:
                domain_uuid: 1aa15eae-a88b-11ed-a2cb-482ae3863d30
                domain_name: mydomain.example
                domain_type: ipa
                auto_enrollment_enabled: true
                ipa:
                    realm_name: MYDOMAIN.EXAMPLE
                    ca_certs: []
                    servers: []
        CreateDomainIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_certs
                - realm_name
                - realm_domains
            type: object
            properties:
                servers:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateDomainIpaServer"
                    example: '["server1.mydomain.example","server2.mydomain.example"]'
                ca_certs:
                    description: A base64 representation of all the list of chain of certificates,
                        including the server ca.
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateDomainIpaCert"
                    example: >-
                        [
                          {
                            "nickname": "MYDOMAIN.EXAMPLE IPA CA",
                            "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                            "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                            "serial_number": "1",
                            "not_valid_before": "2023-01-31T13:23:36Z",
                            "not_valid_after": "2023-01-31T13:23:36Z"
                            "pem": "-----BEGIN CERTIFICATE-----\nMII...\n-----END CERTIFICATE-----\n",
                          }
                        ]
                realm_name:
                    description: The kerberos realm name associated to the IPA domain.
                    type: string
                    example: MYDOMAIN.EXAMPLE
                realm_domains:
                    description: TODO What is the meaning of this field.
                    type: array
                    items:
                        type: string
            additionalProperties: false
            example: >-
                {
                  "realm_name": "MYDOMAIN.EXAMPLE",
                  "servers": [
                    {
                      "fqdn": "ipaserver.mydomain.example",
                      "rhsm_id": "547ce70c-9eb5-4783-a619-086aa26f88e5",
                      "ca_server": true,
                      "hcc_enrollment_server": true,
                      "hcc_update_server": true,
                      "pkinit_server": true
                    }
                  ],
                  "cacerts": [
                    {
                      "nickname": "MYDOMAIN.EXAMPLE IPA CA",
                      "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                      "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                      "serial_number": "1",
                      "not_valid_before": "2023-01-31T13:23:36Z",
                      "not_valid_after": "2023-01-31T13:23:36Z"
                      "pem": "-----BEGIN CERTIFICATE-----\nMII...\n-----END CERTIFICATE-----\n",
                    }
                  ],
                  "realm_domains": [
                    "ipahcc.test"
                  ]
                }
        DomainResponseIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_certs
                - servers
                - realm_name
                - realm_domains
            type: object
            properties:
                servers:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        $ref: "#/components/schemas/DomainResponseIpaServer"
                ca_certs:
                    description: A base64 representation of all the list of chain of certificates,
                        including the server ca.
                    type: array
                    items:
                        $ref: "#/components/schemas/DomainResponseIpaCert"
                    example: >-
                        [
                          {
                            "nickname": "MYDOMAIN.EXAMPLE IPA CA",
                            "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                            "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                            "serial_number": "1",
                            "not_valid_before": "2023-01-31T13:23:36Z",
                            "not_valid_after": "2023-01-31T13:23:36Z"
                            "pem": "-----BEGIN CERTIFICATE-----\nMIIE...\n-----END CERTIFICATE-----\n",
                          }
                        ]
                realm_name:
                    description: The kerberos realm name associated to this IPA domain.
                    type: string
                    example: MYDOMAIN.EXAMPLE
                realm_domains:
                    description: List of realm associated to the IPA domain.
                    type: array
                    items:
                        type: string
                token:
                    description: >-
                        One time token returned when the domain is created to let to
                        register

                        an IPA domain by using hcc-ipa agent.
                    type: string
                    example: ccab7b91-f79a-4e65-9cef-1560ffa36230
                token_expiration:
                    format: date-time
                    description: When expire the one time token.
                    type: string
            additionalProperties: false
            example: >-
                {
                  "servers": [
                    {
                      "fqdn": "ipaserver.mydomain.example",
                      "rhsm_id": "547ce70c-9eb5-4783-a619-086aa26f88e5",
                      "ca_server": true,
                      "hcc_enrollment_server": true,
                      "hcc_update_server": true,
                      "pkinit_server": true
                    }
                  ],
                  "cacerts": [
                    {
                      "nickname": "MYDOMAIN.EXAMPLE IPA CA",
                      "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                      "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                      "serial_number": "1",
                      "not_valid_before": "2023-01-31T13:23:36Z",
                      "not_valid_after": "2023-01-31T13:23:36Z"
                      "pem": "-----BEGIN CERTIFICATE-----\nMIIE...\n-----END CERTIFICATE-----\n",
                    }
                  ]
                }
        DomainResponseIpaServer:
            title: Root Type for CreateDomainIpaServer
            description: Server schema for an entry into the Ipa domain type.
            required:
                - ca_server
                - fqdn
                - hcc_enrollment_server
                - hcc_update_server
                - pkinit_server
                - rhsm_id
            type: object
            properties:
                fqdn:
                    type: string
                    example: server1.mydomain.example
                rhsm_id:
                    type: string
                    example: 03965a2c-bd24-11ed-968d-482ae3863d30
                ca_server:
                    type: boolean
                    example: true
                hcc_enrollment_server:
                    type: boolean
                    example: true
                hcc_update_server:
                    type: boolean
                    example: true
                pkinit_server:
                    type: boolean
                    example: true
            additionalProperties: false
            example:
                fqdn: ipaserver.mydomain.example
                rhsm_id: 03965a2c-bd24-11ed-968d-482ae3863d30
                ca_server: true
                hcc_enrollment_server: true
                hcc_update_server: true
                pkinit_server: true
        CreateDomainIpaServer:
            title: Root Type for CreateDomainIpaServer
            description: Server schema for an entry into the Ipa domain type.
            required:
                - ca_server
                - fqdn
                - hcc_enrollment_server
                - hcc_update_server
                - pkinit_server
                - rhsm_id
            type: object
            properties:
                fqdn:
                    type: string
                    example: server1.mydomain.example
                rhsm_id:
                    type: string
                    example: 03965a2c-bd24-11ed-968d-482ae3863d30
                ca_server:
                    type: boolean
                    example: true
                hcc_enrollment_server:
                    type: boolean
                    example: true
                hcc_update_server:
                    type: boolean
                    example: true
                pkinit_server:
                    type: boolean
                    example: true
            additionalProperties: false
            example:
                fqdn: ipaserver.mydomain.example
                rhsm_id: 03965a2c-bd24-11ed-968d-482ae3863d30
                ca_server: true
                hcc_enrollment_server: true
                hcc_update_server: true
                pkinit_server: true
        RegisterDomainIpa:
            title: Root Type for ResponseIpaObject
            description: Options for ipa domains
            required:
                - ca_certs
                - realm_domains
            type: object
            properties:
                servers:
                    description: List of auto-enrollment enabled servers for this domain.
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateDomainIpaServer"
                    example: '["server1.mydomain.example","server2.mydomain.example"]'
                ca_certs:
                    description: A base64 representation of all the list of chain of certificates,
                        including the server ca.
                    type: array
                    items:
                        $ref: "#/components/schemas/CreateDomainIpaCert"
                    example: >-
                        [
                          {
                            "nickname": "MYDOMAIN.EXAMPLE IPA CA",
                            "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                            "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                            "serial_number": "1",
                            "not_valid_before": "2023-01-31T13:23:36Z",
                            "not_valid_after": "2023-01-31T13:23:36Z"
                            "pem": "-----BEGIN CERTIFICATE-----\nMII...\n-----END CERTIFICATE-----\n",
                          }
                        ]
                realm_domains:
                    description: TODO What is the meaning of this field.
                    type: array
                    items:
                        type: string
            additionalProperties: false
            example: >-
                {
                  "servers": [
                    {
                      "fqdn": "ipaserver.mydomain.example",
                      "rhsm_id": "547ce70c-9eb5-4783-a619-086aa26f88e5",
                      "ca_server": true,
                      "hcc_enrollment_server": true,
                      "hcc_update_server": true,
                      "pkinit_server": true
                    }
                  ],
                  "cacerts": [
                    {
                      "nickname": "MYDOMAIN.EXAMPLE IPA CA",
                      "issuer": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                      "subject": "CN=Certificate Authority,O=MYDOMAIN.EXAMPLE",
                      "serial_number": "1",
                      "not_valid_before": "2023-01-31T13:23:36Z",
                      "not_valid_after": "2023-01-31T13:23:36Z"
                      "pem": "-----BEGIN CERTIFICATE-----\nMII...\n-----END CERTIFICATE-----\n",
                    }
                  ],
                  "realm_domains": [
                    "ipahcc.test"
                  ]
                }
    responses:
        CreateDomainResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/DomainResponse"
            description: Response when a domain has been created.
        ErrorResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ErrorResponseSchema"
            description: Error response for some operation.
        ReadDomainResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/DomainResponse"
            description: This represent the response for a specific domain.
        ListDomainsResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ListDomainsResponseSchema"
            description: It represent the response for a list of domains query.
        HostConfResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/HostConfResponseSchema"
            description: Response for the HostConf action.
        CreateDomainIpaResponse:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/DomainResponse"
            description: Response when a domain has been created.
    securitySchemes:
        x-rh-identity:
            type: apiKey
            description: Require a valid X-Rh-Identity
            name: X-Rh-Identity
            in: header
security:
    - x-rh-identity: []
tags:
    - name: resources
      description: CRUD operation on defined resources
    - name: actions
      description: Endpoints no directly related with resources but model actions with
          the API
